<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <title>Dashboard Alumno - San Viator</title>
  <link rel="stylesheet" href="/css/dashboard-alumno.css">
</head>
<body>
  <!-- Alerta de confirmaci√≥n -->
  <div id="alert" class="alert">
    <span id="alert-message"></span>
    <button class="close-alert" onclick="hideAlert()">√ó</button>
  </div>

  <div class="alumno-card">
    <div class="header">
      <h2>Bienvenido, <%= name %></h2>
      <p class="rut-info"><strong>RUT:</strong> <%= rut %></p>
    </div>

    <!-- C√≥digo de Barras -->
    <div class="barcode-section">
      <h3>üìä Tu C√≥digo de Barras</h3>
      <div class="barcode-container">
        <img src="<%= barcodeDataURL %>" alt="C√≥digo de barras para registro de asistencia" class="barcode-image">
      </div>
      <p class="scanner-instructions">
        üìç Muestra este c√≥digo al esc√°ner para registrar tu asistencia
      </p>
    </div>

    <!-- Informaci√≥n de uso -->
    <div class="usage-info">
      <h4>üí° C√≥mo usar tu c√≥digo:</h4>
      <ul>
        <li>Acerca el c√≥digo al lector de c√≥digo de barras</li>
        <li>Mant√©n el c√≥digo estable y bien iluminado</li>
        <li>Escucha el sonido de confirmaci√≥n</li>
        <li>Tu asistencia se registrar√° autom√°ticamente</li>
      </ul>
    </div>

    <!-- Estado de registro -->
    <div class="registro-status" id="registroStatus">
      <h4>üìù Estado de Asistencia</h4>
      <p id="statusText">Verificando estado de registro...</p>
    </div>

    <div class="actions">
      <a href="/logout" class="btn-logout">üö™ Cerrar Sesi√≥n</a>
    </div>
  </div>

  <script>
    // Variables globales
    let ultimoIdRegistro = null;
    let yaNotificadoHoy = false;

    // Funci√≥n para mostrar alerta
    function showAlert(message, type = 'success') {
      const alert = document.getElementById('alert');
      const alertMessage = document.getElementById('alert-message');
      
      alert.className = `alert ${type} show`;
      alertMessage.textContent = message;
      
      // Ocultar autom√°ticamente despu√©s de 5 segundos
      setTimeout(hideAlert, 5000);
    }

    // Funci√≥n para ocultar alerta
    function hideAlert() {
      const alert = document.getElementById('alert');
      alert.classList.remove('show');
    }

    // Funci√≥n para actualizar el estado en la interfaz
    function actualizarEstadoRegistro(tieneRegistro, ultimoRegistro = null) {
      const statusText = document.getElementById('statusText');
      const registroStatus = document.getElementById('registroStatus');
      
      if (tieneRegistro && ultimoRegistro) {
        // VERIFICAR SI EST√Å PRESENTE (presente === 1)
        if (ultimoRegistro.presente === 1) {
          statusText.innerHTML = `‚úÖ <strong>Asistencia registrada hoy</strong><br>
                                 <small>Hora: ${ultimoRegistro.hora}</small>`;
          registroStatus.style.background = '#d4edda';
          registroStatus.style.borderLeftColor = '#28a745';
        } else {
          // EST√Å AUSENTE (presente === 0)
          statusText.innerHTML = `‚è≥ <strong>Esperando registro de asistencia</strong><br>
                                 <small>Tu c√≥digo est√° listo para escanear</small>`;
          registroStatus.style.background = '#fff3cd';
          registroStatus.style.borderLeftColor = '#ffc107';
        }
      } else {
        // NO HAY REGISTRO
        statusText.innerHTML = `‚è≥ <strong>Esperando registro de asistencia</strong><br>
                               <small>Tu c√≥digo est√° listo para escanear</small>`;
        registroStatus.style.background = '#fff3cd';
        registroStatus.style.borderLeftColor = '#ffc107';
      }
    }

    // Funci√≥n para verificar si hay registros nuevos
    async function verificarRegistro() {
      try {
        const response = await fetch(`/api/alumno/ultimo-registro/<%= rut %>`);
        const data = await response.json();
        
        if (data.tieneRegistro && data.ultimoRegistro) {
          // Actualizar estado en la interfaz
          actualizarEstadoRegistro(true, data.ultimoRegistro);
          
          // Verificar si es un registro NUEVO y PRESENTE (no hemos notificado)
          if (data.ultimoRegistro.presente === 1) {
            if (!ultimoIdRegistro || data.ultimoRegistro.id_asistencia !== ultimoIdRegistro) {
              // Es un registro nuevo PRESENTE - mostrar alerta
              if (!yaNotificadoHoy) {
                showAlert('‚úÖ ¬°Asistencia registrada con √©xito!', 'success');
                yaNotificadoHoy = true;
              }
              
              ultimoIdRegistro = data.ultimoRegistro.id_asistencia;
            }
          } else {
            // No hay registro PRESENTE hoy
            yaNotificadoHoy = false;
            ultimoIdRegistro = null;
          }
        } else {
          // No hay registros hoy
          actualizarEstadoRegistro(false);
          yaNotificadoHoy = false;
          ultimoIdRegistro = null;
        }
      } catch (error) {
        console.log('Error verificando registro:', error);
        document.getElementById('statusText').innerHTML = 
          '‚ùå <strong>Error conectando al servidor</strong>';
      }
    }

    // Iniciar verificaci√≥n cuando carga la p√°gina
    window.addEventListener('load', function() {
      // Verificar inmediatamente
      verificarRegistro();
      
      // Verificar cada 3 segundos
      setInterval(verificarRegistro, 3000);
    });
  </script>
</body>
</html>